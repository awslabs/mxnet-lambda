# To deploy for the first time, and for each update,
# run both of the following commands in order:
#
# aws cloudformation package \
# --template-file template.yaml \
# --output-template-file template-out.yaml \
# --s3-bucket <your-s3-bucket-name>
#
# aws cloudformation deploy \
# --template-file <path-to-file/template-out.yaml \
# --stack-name <STACK_NAME> \
# --capabilities CAPABILITY_IAM

AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: MXNet Lambda Function
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: s3://<<bucket-name>>/swagger.yaml #UPDATE
      StageName: prod
      Variables:
        # NOTE: Before using this template, replace the <<region>> and <<account>> fields
        #       in Lambda integration URI in the swagger file to region and accountId
        #       you are deploying to
        LambdaFunctionName: !Ref LambdaFunction

  LambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: lambda_function.lambda_handler
      Runtime: python2.7
      CodeUri: s3://<<bucket-name>>/lambda_function.zip #UPDATE
      Description: MXNet Lambda Function
      MemorySize: 1536
      Timeout: 60
      Policies:
       - AWSLambdaExecute # Managed Policy
       - Version: '2012-10-17' # Policy Document
         Statement:
           - Effect: Allow
             Action:
               - s3:GetObject
             Resource: 'arn:aws:s3:::<<bucket-name>>/*'
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /{proxy+}
            Method: ANY
Outputs:
  ApiUrl:
    Description: URL of your API endpoint
    Value: !Join
      - ''
      - - https://
        - !Ref ApiGatewayApi
        - '.execute-api.'
        - !Ref 'AWS::Region'
        - '.amazonaws.com/prod'
